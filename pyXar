#!/usr/bin/python
import sys
import os
import logging
import logging.config
import optparse
import ROOT
ROOT.PyConfig.IgnoreCommandLineOptions = True
from python import Testboard
from python import DUT
from python import DacDac, Calibrate, Threshold, Trim, Pretest, BondMap, SCurves, PHCalibration, PHMap
from python import BetterConfigParser
from gui import PxarGui
from python import PyCmd
from python import ColorFormatter
__version__ = "pyXar: 0.2"

class Pyxar(PyCmd):

    def __init__(self, a_workdir):
        super(Pyxar, self).__init__()
        logging.ColorFormatter = ColorFormatter
        logging.config.fileConfig('%s/logging.conf' %a_workdir)
        self.directory = a_workdir
        self.logger = logging.getLogger(self.__class__.__name__)
        self.window = None
    
    def do_init(self, line):
        configs = ['%s/general' %(self.directory),'%s/module' %(self.directory),'%s/tb' %(self.directory),'%s/test.cfg' %(self.directory)]
        self.config = BetterConfigParser()
        self.config.read(configs)
        self.config.set('General', 'work_dir', self.directory)
        self.dut = DUT(self.config)
        self.tb = Testboard(self.config, self.dut)
        self.logger.info('Initialzed DTB.')
        self.tb.ia()
        self.tb.id()

    def do_gui(self, line):
        if self.window:
            return
        self.window = PxarGui( ROOT.gClient.GetRoot(), 800, 800 )

    @staticmethod
    def str_to_class(str):
        return reduce(getattr, str.split("."), sys.modules[__name__])
    
    def run_test(self, line):
        a_test = globals()[line](self.tb, self.config)
        a_test.go(self.config)
        if self.window:
            self.window.histos.extend(a_test.histos)
            self.window.update()
 
if __name__ == '__main__':
    parser = optparse.OptionParser()
    parser.add_option("-d", "--dir", dest="work_dir", default='data',
                  help="Folder with DUT/DTB settings.", metavar="DIR")
    parser.add_option("-n", "--nogui", dest="gui", default=True, action="store_false",
                  help="Run without gui.")
    (options, args) = parser.parse_args()
    a_workdir = os.path.abspath(options.work_dir)
    pyxar = Pyxar(a_workdir)
    if options.gui:
        pyxar.window = PxarGui( ROOT.gClient.GetRoot(), 800, 800 )
    #TODO remove
    pyxar.do_init('')
    pyxar.cmdloop(__version__)
